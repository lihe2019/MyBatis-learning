<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.lihe.dao.TeacherMapper">
    <select id="getTeachers" resultType="Teacher">
        select * FROM teacher;
    </select>


    <!-- 按照结果嵌套查询 -->
    <select id="getTeacher" resultMap="TeacherStudent">
        SELECT s.id sid, s.name sname, t.name tname, t.id tid
        FROM student s, teacher t
        WHERE s.tid = t.id and t.id = #{tid};
    </select>
    <!-- f复杂的属性，我们需要单独处理
       对象：association
       集合：collection
       javaType=“” 指定属性的类型
       集合中的泛型信息，我们使用ofType
       -->
    <resultMap id="TeacherStudent" type="Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
        <collection property="students" ofType="Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>




    <select id="getTeacher2" resultMap="TeacherStudent2">
        select * from teacher where id = #{tid};
    </select>
    
    <resultMap id="TeacherStudent2" type="Teacher">
        <collection property="students" javaType="ArrayList" ofType="Student" select="getStudentByTeacherID" column="id"/>
    </resultMap>

    <select id="getStudentByTeacherID" resultType="Student">
        select * from student where tid = #{tid};
    </select>



</mapper>