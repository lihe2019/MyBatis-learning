<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace= 绑定一个对应的Dao/Mapper接口-->
<mapper namespace="com.lihe.dao.UserMapper">
    <!--这里的id对应原来的方法名-->
    <!--所有的xml配置都是空格里面加东西，属性-->
    <!--resultType现在先写类名，不要写集合-->

    <!--拼接%不要在这里，会有注入危险
    select * from mybatis.user where id = ？
    select * from mybatis.user where id = 1  正常
    select * from mybatis.user where id = 1 or 1 = 1 sql注入

    -->
    <select id="getUserLike" parameterType="String" resultType="com.lihe.pojo.User">
        select * from user where name like #{value}
    </select>

    <select id="getUserList" resultType="com.lihe.pojo.User">
        select * from mybatis.user
    </select>

    <select id="getUserByID" parameterType="int" resultType="com.lihe.pojo.User">
        select * from mybatis.user where id = #{id}
    </select>

    <insert id="addUser" parameterType="com.lihe.pojo.User">
        insert into mybatis.user (id, name, pwd) value (#{id}, #{name}, #{pwd});
    </insert>

    <update id="updateUser" parameterType="com.lihe.pojo.User">
        update mybatis.user set name=#{name},pwd=#{pwd} =  where id = #{id};
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from mybatis.user where id = #{id};
    </delete>

    <!-- 对象中的属性，可以直接取出来
    传递map的kay
    -->
    <insert id="addUser2" parameterType="map">
        insert into mybatis.user (id, name, pwd) value (#{userid}, #{userName}, #{passWord});
    </insert>
</mapper>